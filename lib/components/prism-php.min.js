!function(e){var n="undefined"!=typeof Prism&&Prism||null,o="undefined"!=typeof global&&global||"undefined"!=typeof window&&window||"undefined"!=typeof WorkerGlobalScope&&self instanceof WorkerGlobalScope&&self||null;if(null==n&&"function"==typeof require&&(n=require("prismjs")),null==n&&"function"==typeof define&&define.amd)return void define(["prismjs"],function(n){return e(n,o,{Prism:n})});if(null==n)throw Error("Prism is not loaded");e(n,o,{Prism:Prism})}(function(e){e.languages.php=e.languages.extend("clike",{keyword:/\b(and|or|xor|array|as|break|case|cfunction|class|const|continue|declare|default|die|do|else|elseif|enddeclare|endfor|endforeach|endif|endswitch|endwhile|extends|for|foreach|function|include|include_once|global|if|new|return|static|switch|use|require|require_once|var|while|abstract|interface|public|implements|private|protected|parent|throw|null|echo|print|trait|namespace|final|yield|goto|instanceof|finally|try|catch)\b/gi,constant:/\b[A-Z0-9_]{2,}\b/g,comment:{pattern:/(^|[^\\])(\/\*[\w\W]*?\*\/|(^|[^:])(\/\/|#).*?(\r?\n|$))/g,lookbehind:!0}}),e.languages.insertBefore("php","keyword",{delimiter:/(\?>|<\?php|<\?)/gi,variable:/(\$\w+)\b/gi,"package":{pattern:/(\\|namespace\s+|use\s+)[\w\\]+/g,lookbehind:!0,inside:{punctuation:/\\/}}}),e.languages.insertBefore("php","operator",{property:{pattern:/(->)[\w]+/g,lookbehind:!0}}),e.languages.markup&&(e.hooks.add("before-highlight",function(e){"php"===e.language&&(e.tokenStack=[],e.backupCode=e.code,e.code=e.code.replace(/(?:<\?php|<\?)[\w\W]*?(?:\?>)/gi,function(n){return e.tokenStack.push(n),"{{{PHP"+e.tokenStack.length+"}}}"}))}),e.hooks.add("before-insert",function(e){"php"===e.language&&(e.code=e.backupCode,delete e.backupCode)}),e.hooks.add("after-highlight",function(n){if("php"===n.language){for(var o,a=0;o=n.tokenStack[a];a++)n.highlightedCode=n.highlightedCode.replace("{{{PHP"+(a+1)+"}}}",e.highlight(o,n.grammar,"php"));n.element.innerHTML=n.highlightedCode}}),e.hooks.add("wrap",function(e){"php"===e.language&&"markup"===e.type&&(e.content=e.content.replace(/(\{\{\{PHP[0-9]+\}\}\})/g,'<span class="token php">$1</span>'))}),e.languages.insertBefore("php","comment",{markup:{pattern:/<[^?]\/?(.*?)>/g,inside:e.languages.markup},php:/\{\{\{PHP[0-9]+\}\}\}/g}))});